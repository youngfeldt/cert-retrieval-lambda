DEBUG run: using build compiler configuration from metadata config=BuildConfig { compiler: None, target: None, include: None }
DEBUG run: found new target binaries to build binaries={"envars"}
DEBUG run:command{cargo=Build { common: CommonOptions { quiet: false, jobs: None, keep_going: false, profile: None, features: [], all_features: false, no_default_features: false, target: ["x86_64-unknown-linux-gnu"], target_dir: None, message_format: [], verbose: 1, color: Some("auto"), frozen: false, locked: false, offline: false, config: [], unstable_flags: [], timings: None }, manifest_path: None, release: false, ignore_rust_version: false, unit_graph: false, packages: [], workspace: false, exclude: [], all: false, lib: false, bin: [], bins: false, example: [], examples: false, test: [], tests: false, bench: [], benches: false, all_targets: false, out_dir: None, build_plan: false, future_incompat_report: false } target_arch=TargetArch { rustc_target: "x86_64-unknown-linux-gnu", channel: Some(Stable) } _cargo_metadata=Metadata { packages: [Package { name: "envars", version: Version { major: 0, minor: 1, patch: 0 }, authors: [], id: PackageId { repr: "path+file:///Users/fierce/workspace/rust/envars#0.1.0" }, source: None, description: None, dependencies: [Dependency { name: "aws-config", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 1, minor: Some(5), patch: Some(8), pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "aws-sdk-s3", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 1, minor: Some(56), patch: Some(0), pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "aws-sdk-secretsmanager", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 1, minor: Some(50), patch: Some(0), pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "lambda_runtime", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 0, minor: Some(13), patch: Some(0), pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "log", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 0, minor: Some(4), patch: Some(0), pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "serde", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 1, minor: Some(0), patch: None, pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: ["derive"], target: None, rename: None, registry: None, path: None }, Dependency { name: "serde_json", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 1, minor: Some(0), patch: None, pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "simple_logger", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 5, minor: Some(0), patch: Some(0), pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "tokio", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 1, minor: None, patch: None, pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: ["full"], target: None, rename: None, registry: None, path: None }, Dependency { name: "tracing", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 0, minor: Some(1), patch: None, pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: [], target: None, rename: None, registry: None, path: None }, Dependency { name: "tracing-subscriber", source: Some("registry+https://github.com/rust-lang/crates.io-index"), req: VersionReq { comparators: [Comparator { op: Caret, major: 0, minor: Some(3), patch: None, pre: Prerelease("") }] }, kind: Normal, optional: false, uses_default_features: true, features: ["fmt"], target: None, rename: None, registry: None, path: None }], license: None, license_file: None, targets: [Target { name: "envars", kind: ["bin"], crate_types: ["bin"], required_features: [], src_path: "/Users/fierce/workspace/rust/envars/src/main.rs", edition: E2021, doctest: false, test: true, doc: true }], features: {}, manifest_path: "/Users/fierce/workspace/rust/envars/Cargo.toml", categories: [], keywords: [], readme: None, repository: None, homepage: None, documentation: None, edition: E2021, metadata: Null, links: None, publish: None, default_run: None, rust_version: None }], workspace_members: [PackageId { repr: "path+file:///Users/fierce/workspace/rust/envars#0.1.0" }], resolve: None, workspace_root: "/Users/fierce/workspace/rust/envars", target_directory: "/Users/fierce/workspace/rust/envars/target", workspace_metadata: Null, version: 1 } skip_target_check=false}: compiling with CargoZigbuild
